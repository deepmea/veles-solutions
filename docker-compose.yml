version: '3.8'

services:
  # PostgreSQL with separate database per tenant
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: veles_admin
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_me_in_production}
      POSTGRES_DB: veles_master
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U veles_admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for queue and caching
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-change_me_too}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Backend with tenant isolation
  api:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://veles_admin:${DB_PASSWORD:-change_me_in_production}@postgres:5432/veles_master
      REDIS_URL: redis://:${REDIS_PASSWORD:-change_me_too}@redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
      ENVIRONMENT: ${ENVIRONMENT:-development}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker for report generation
  celery_worker:
    build: ./backend
    command: celery -A tasks worker --loglevel=info --concurrency=4
    environment:
      DATABASE_URL: postgresql://veles_admin:${DB_PASSWORD:-change_me_in_production}@postgres:5432/veles_master
      REDIS_URL: redis://:${REDIS_PASSWORD:-change_me_too}@redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - ./reports:/reports

  # Celery Beat for scheduled tasks
  celery_beat:
    build: ./backend
    command: celery -A tasks beat --loglevel=info
    environment:
      DATABASE_URL: postgresql://veles_admin:${DB_PASSWORD:-change_me_in_production}@postgres:5432/veles_master
      REDIS_URL: redis://:${REDIS_PASSWORD:-change_me_too}@redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app

  # MT4/5 Connection Service (per tenant)
  mt_connector:
    build: ./connectors/mt
    environment:
      DATABASE_URL: postgresql://veles_admin:${DB_PASSWORD:-change_me_in_production}@postgres:5432/veles_master
      REDIS_URL: redis://:${REDIS_PASSWORD:-change_me_too}@redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./connectors/mt:/app
    deploy:
      replicas: 1  # Scale based on number of tenants

  # Nginx reverse proxy (optional for local dev)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data: